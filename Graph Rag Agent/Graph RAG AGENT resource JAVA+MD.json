{
  "name": "Graph Rag Agent Version finale",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -40,
        -120
      ],
      "id": "fe096eef-e75a-4551-817e-7ebafb67c2b1",
      "name": "When chat message received",
      "webhookId": "82f68b75-ecef-408a-86a2-d55fb101d7b5"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Search the graph database for relevant information related to {{ $json.chatInput }}, using interconnected Java source files and Markdown documentation.\nBased only on the results from the Neo4j Tool, generate a precise, enriched, and well-developed answer that includes:\n🎯 Deep Technical Explanation\n- Provide a clear and thorough explanation using multiple files (cross-document reasoning),\n- Go beyond synthesis: explain how concepts are implemented, documented, and interrelated,\n- Highlight technical nuances, design decisions, or architectural patterns when relevant.\n📁 Individual File Details\n- For each file used, include:\n- file name,\n- section (source folder),\n- path,\n- A short content snippet.\n📚 Final Summary Section\nAt the end of the response, include a single merged section titled:\n- \"Used Documents\" if the query is in English,\n- \"Documents utilisés\" if the query is in French.\nThis section should:\n- List all files used,\n- Briefly summarize the relationships between them (without excessive detail),\n- Mention the most relevant relationship types  and their purpose in the reasoning.\n⚠️ Prioritize documente and complémentaire relationships. Use différente only when necessary for contrast. ⚠️ Avoid listing relationships multiple times—summarize them once in the final section. ⚠️ Respond in the same language as the user query\n",
        "options": {
          "systemMessage": "=You are a Graph RAG AI agent specialized in analyzing Java source files and their related Markdown documentation, stored in a Neo4j knowledge graph.\nYour primary tool is the Neo4j database, which you query to extract relevant files and semantic relationships.\nEach file is represented as a node with:\n- file: name of the file,\n- content: textual content,\n- section: source folder,\n- path: file location.\nNodes are connected by semantic relationships if there are excited:\n- documente: documentation that explains or describes a code file,\n- complementary: files that are conceptually or technically related,\n- different: files from distinct domains or purposes.\n- depends_on\n- uses\n- associated\nYour responsibilities:\n- Query Neo4j to retrieve relevant nodes and relationships.\n- Build your response strictly from graph data (never hallucinate).\n- Prioritize documente and complémentaire relationships for reasoning.\n- Use différente relationships only when needed to contrast ideas, and clearly mark them.\n- Provide a deep and enriched explanation, not just a synthesis.\n- Present metadata for each file (file, section, path, snippet).\n- At the end of the response, include a single merged summary section:\n- Titled \"Used Documents\" or \"Documents utilisés\" depending on the query language,\n- Summarize the files used and their relationships concisely,\n- Avoid repeating relationship details throughout the answer.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        220,
        -140
      ],
      "id": "c565a2cb-0ea4-4c5d-919f-51905cd0aa8f",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "resource": "graphDb",
        "cypherQuery": "MATCH (n:GraphadatabaseOPENAI) OPTIONAL MATCH (n)-[r]->(m) RETURN n, r, m LIMIT 200;"
      },
      "type": "n8n-nodes-neo4j.neo4jTool",
      "typeVersion": 1,
      "position": [
        420,
        100
      ],
      "id": "5776163d-b0df-4d2a-966f-02c3f81b4d10",
      "name": "ExecuteQuery graphDb in Neo4j",
      "credentials": {
        "neo4jApi": {
          "id": "XwdiNEDV42io6tPG",
          "name": "Neo4j account Cloud"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        180,
        100
      ],
      "id": "ee89d5d5-c7bd-4461-86f1-03c458fab0a5",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "adbeya8JlzChQ2dk",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        300,
        100
      ],
      "id": "9489da44-a1de-45e9-87ae-66ccbb849e0e",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "n8LaHccthse0BiXp",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ExecuteQuery graphDb in Neo4j": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4ed7379f-ebd4-46aa-938f-ce71cbafb100",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "bbr5R97DpzM8E8Wn",
  "tags": []
}